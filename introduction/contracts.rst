************************************************
Контракты
************************************************

Описываются контракты, которые создаются по умолчанию после установки программы. Все эти контракты создаются в первой экосистеме. Поэтому при их вызове из других экосистем необходимо указывать полное имя, например, **@1NewContract**.

NewEcosystem
==============================
Контракт создает создает новую экосистему. Для получения идентификатора созданной экосистемы необходимо взять поле *result*, которое возвращается в txstatus. 

Параметры
   
* *Name string "optional"* - наименование экосистемы. Наименование экосистемы можно установить или изменить в дальнейшем.

MoneyTransfer
==============================
Контракт переводит деньги с текущего кошелька в текущей экосистеме на указанный кошелек.

Параметры

* *Recipient string* - кошелек получателя в любом формате - число или XXXX-....-XXXX.
* *Amount    string* - величина переводимых средств в qAPL.
* *Comment   string "optional"* - комментарий.

NewContract
==============================
Контракт создает новый контракт в текущей экосистеме.

Параметры

* *Value string* - текст контракта или контрактов.
* *Conditions string* - условие изменения контракта.
* *Wallet string "optional"* - идентификатор кошелек, кто сможет потом активировать контракт.
* *TokenEcosystem int "optional"* - идентификатор экосистемы в валюте которое будет происходить оплата, если контракт будет активрован.

EditContract
==============================
Изменение контракта в текущей экосистеме.

Параметры
      
* *Id int* - идентификатор изменяемого контракта.
* *Value string* - текст контракта или контрактов.
* *Conditions string* - условие изменения контракта.

ActivateContract
==============================
Активация контракта в текущей экосистеме. Активация возможно с того кошелька, который был указан при создании контракта. После активации, этот кошелек будет оплачивать выполнение этого контракта.

Параметры
      
* *Id int* - идентификатор активируемого контракта.

DeactivateContract
==============================
Деактивация контракта в текущей экосистеме. Деактивация возможно с того кошелька, на который был активирован контракт. После деактивации, выполнение этого контракта будут оплачивать вызывающие его пользователи.

Параметры
      
* *Id int* - идентификатор деактивируемого контракта.

NewParameter
==============================
Контракт добавляет новый параметр к текущей экосистеме.

Параметры

* *Name string* - имя параметра.
* *Value string* - значение параметра.
* *Conditions string* - условие изменения параметра.

EditParameter
==============================
Контракт изменяет существующий параметр в текущей экосистеме.

Параметры

* *Name string* - имя изменяемого параметра.
* *Value string* - новое значение параметра.
* *Conditions string* - новое условие изменения параметра.

NewMenu
==============================
Контракт добавляет новое меню к текущей экосистеме.

Параметры

* *Name string* - имя меню.
* *Value string* - текст меню.
* *Title string "optional"* - заголовок меню.
* *Conditions string* - условие изменения меню.

EditMenu
==============================
Контракт изменяет существующее меню в текущей экосистеме.

Параметры

* *Id int* - идентификатор изменяемого меню.
* *Value string* - новое значение меню.
* *Title string "optional"* - заголовок меню.
* *Conditions string* - новое условие изменения меню.

AppendMenu
==============================
Контракт добавляет текст к существующему меню в текущей экосистеме.

Параметры

* *Id int* - идентификатор изменяемого меню.
* *Value string* - добавляемое значение к меню.

NewPage
==============================
Контракт добавляет новую страницу к текущей экосистеме.

Параметры

* *Name string* - имя страницы.
* *Value string* - текст страницы.
* *Menu string* - имя меню, привязанного к данной странице.
* *Conditions string* - условие изменения страницы.

EditPage
==============================
Контракт изменяет существующую страницу в текущей экосистеме.

Параметры

* *Id int* - идентификатор изменяемой страницы.
* *Value string* - новое значение страницы.
* *Menu string* - имя нового меню страницы.
* *Conditions string* - новое условие изменения страницы.

AppendPage
==============================
Контракт добавляет текст к существующей странице текущей экосистеме.

Параметры

* *Id int* - идентификатор изменяемой страницы.
* *Value string* - добавляемое значение к странице.

NewBlock
==============================
Контракт добавляет новый блок с шаблоном к текущей экосистеме. Данные блоки можно использовать в шаблонизаторе с помощью функции Input.

Параметры

* *Name string* - имя блока.
* *Value string* - текст блока.
* *Conditions string* - условие изменения блока.

EditBlock
==============================
Контракт изменяет существующий блок в текущей экосистеме.

Параметры

* *Id int* - идентификатор изменяемого блока.
* *Value string* - новое значение блока.
* *Conditions string* - новое условие изменения блока.

NewTable
==============================
Контракт добавляет новую таблицу к текущей экосистеме. 
Параметры

* *Name string* - имя таблицы - латинские символы. 
* *Columns string* - массив колонок в JSON формате *[{"name":"...", "type":"...","index": "0", "conditions":"..."},...]*.

  * *name* - наименование колонки - латинские символы.
  * *type* - тип **varchar,bytea,number,datetime,money,text,double,character**.
  * *index* - неиндексируемое поле  - "0", создать индекс - "1".
  * *conditions* - условие изменения данных в столбце. Если необходимо указать права доступа на чтение, то нужно использовать JSON формат. Например, *{"update":"ContractConditions(`MainCondition`)", "read":"ContractConditions(`MainCondition`)"}*

* *Permissions string* - Разрешения на доступ в JSON формате *{"insert": "...", "new_column": "...", "update": "..."}*.

  * *insert* - условие для вставки записей.
  * *new_column* - условие для добавления колонки.
  * *update* - условие на изменение этих данных.
   

EditTable
==============================
Контракт изменяет разрешение таблицы в текущей экосистеме. 
Параметры

* *Name string* - имя таблицы - латинские символы. 
* *Permissions string* - Разрешения на доступ в JSON формате *{"insert": "...", "new_column": "...", "update": "..."}*.

  * *insert* - условие для вставки записей.
  * *new_column* - условие для добавления колонки.
  * *update* - условие на изменение этих данных.
   
NewColumn
==============================
Контракт добавляет новую колонку к таблице в текущей экосистеме. 

Параметры

* *TableName string* - имя таблицы - латинские символы. 
* *Name* - наименование колонки - латинские символы.
* *Type* - тип **varchar,bytea,number,money,datetime,text,double,character**.
* *Index* - неиндексируемое поле  - "0", создать индекс - "1".
* *Permissions* - условие изменения данных в столбце. Если необходимо указать права доступа на чтение, то нужно использовать JSON формат. Например, *{"update":"ContractConditions(`MainCondition`)", "read":"ContractConditions(`MainCondition`)"}*

EditColumn
==============================
Контракт меняет разрешение на изменения у колонки в таблице в текущей экосистеме. 

Параметры

* *TableName string* - имя таблицы - латинские символы. 
* *Name* - наименование колонки - латинские символы.
* *Permissions* - условие изменения колонки. Если необходимо указать права доступа на чтение, то нужно использовать JSON формат. Например, *{"update":"ContractConditions(`MainCondition`)", "read":"ContractConditions(`MainCondition`)"}*


NewLang
==============================
Контракт добавляет языковые ресурсы в текущей экосистеме. Права на добавление определяются в параметре *changing_language* s настройках экосистемы. 

Параметры

* *Name string* - имя языкового ресурса - латинские символы. 
* *Trans* - языковые ресурсы в виде строки в JSON формате c ключами с двухсимвольными кодировками языков и с переводом в качестве значения. Например: **{"en": "English text", "ru": "Английский текст"}**.

EditLang
==============================
Контракт обновляет языковой ресурс в текущей экосистеме. Права на обновление определяются в параметре *changing_language* s настройках экосистемы. 

Параметры

* *Name string* - имя языкового ресурса - латинские символы. 
* *Trans* - языковые ресурсы в виде строки в JSON формате c ключами с двухсимвольными кодировками языков и с переводом в качестве значения. Например: **{"en": "English text", "ru": "Английский текст"}**.

NewSign
==============================
Контракт добавляет подпись для контрактов в текущей экосистеме.

Параметры

* *Name string* - имя контракта, который будет использовать дополнительную подпись. 
* *Value string* - описание параметров в виде JSON строки. 
    
  * *title* - Текст сообщения
  * *params* - массив параметров, которые показываются пользователю, где **name** - имя поля, **text** - описание поараметра.
    
* *Conditions string* - условие изменения записи.

Пример значения *Value*

**{"title": "Would you like to sign?", "params":[{"name": "Receipient", "text": "Wallet"},{"name": "Amount", "text": "Amount(EGS)"}]}**

EditSign
==============================
Контракт обновляет подпись для контрактов в текущей экосистеме. 

Параметры

* *Id int* - идентификатор изменяемой подписи.
* *Value string* - новое значение параметров.
* *Conditions string* - новое условие изменения параметров подписи.

Import 
==============================
Контракт имопртирует sim данные в экосистему.

Параметры

* *Data string* - sim данные для импорта в виде текста. Полчаются при экспорте из экосистемы в виде .sim файла.

