************************************************
Системные контракты
************************************************

Системные контракты создаются по умолчанию при установке платформы в экосистеме №1. Поэтому при вызове их из других экосистем необходимо указывать полное имя, например, ``@1NewContract``.

NewEcosystem
==============================
Контракт создает создает новую экосистему. Для получения идентификатора созданной экосистемы необходимо обратиться к полю *result*, которое возвращается в txstatus. Параметры:
   
* *Name string "optional"* - имя экосистемы (можно установить или изменить в дальнейшем).

MoneyTransfer
==============================
Контракт переводит токены платформы APL с аккаунта текущего пользователя на указанный аккаунт в первой экосистеме. Параметры:

* *Recipient string* - акканут получателя в любом формате - число или ``XXXX-....-XXXX``,
* *Amount    string* - величина переводимых токенов APL,
* *Comment   string "optional"* - комментарий.

NewContract
==============================
Контракт создает новый контракт в текущей экосистеме. Параметры:

* *Value string* - текст контракта или контрактов,
* *Conditions string* - условие изменения контракта,
* *Wallet string "optional"* - идентификатор аккаунта пльзователя, к которому планируется привязать контракт (по умолчанию основателя экосистемы),
* *TokenEcosystem int "optional"* - идентификатор экосистемы в токенах которой будет происходить оплата, если контракт будет активрован.

EditContract
==============================
Изменение контракта в текущей экосистеме. Параметры:
      
* *Id int* - идентификатор изменяемого контракта,
* *Value string* - текст контракта или контрактов,
* *Conditions string* - права доступа на изменение контракта. 

ActivateContract
==============================
Привязка контракта к аккаунту в текущей экосистеме. Привязка возможна с к аккаунту, который был указан при создании контракта. После привязки, с указанного аккаунта будет оплачивать выполнение данного контракта. Параметры:
      
* *Id int* - идентификатор привязываемого контракта.

DeactivateContract
==============================
Отвязка  контракта от аккаунта в текущей экосистеме. Отвязка возможна с того с аккаунта, к которому был привязан контракт. После отвязки контракта, его выполнение будут оплачивать вызывающие его пользователи. Параметры:
      
* *Id int* - идентификатор отвязываемого контракта.

NewParameter
==============================
Контракт добавляет новый параметр к текущей экосистеме. Параметры:

* *Name string* - имя параметра,
* *Value string* - значение параметра,
* *Conditions string* - права на изменение параметра.

EditParameter
==============================
Контракт изменяет существующий параметр в текущей экосистеме. Параметры:

* *Name string* - имя изменяемого параметра,
* *Value string* - новое значение параметра,
* *Conditions string* - новые права на изменение параметра.

NewMenu
==============================
Контракт добавляет новое меню к текущей экосистеме. Параметры:

* *Name string* - имя меню,
* *Value string* - текст меню,
* *Title string "optional"* - заголовок меню,
* *Conditions string* - права на изменение меню.

EditMenu
==============================
Контракт изменяет существующее меню в текущей экосистеме. Параметры:

* *Id int* - идентификатор изменяемого меню,
* *Value string* - новай текст меню,
* *Title string "optional"* - заголовок меню,
* *Conditions string* - новое права на изменение меню.

AppendMenu
==============================
Контракт добавляет текст к существующему меню в текущей экосистеме. Параметры:

* *Id int* - идентификатор дополняемого меню,
* *Value string* - добавляемый текст.

NewPage
==============================
Контракт добавляет новую страницу в текущей экосистеме. Параметры:

* *Name string* - имя страницы,
* *Value string* - текст страницы,
* *Menu string* - имя меню, привязанного к данной странице,
* *Conditions string* - права на изменение страницы.

EditPage
==============================
Контракт изменяет существующую страницу в текущей экосистеме. Параметры:

* *Id int* - идентификатор изменяемой страницы,
* *Value string* - новый текст страницы,
* *Menu string* - имя нового меню страницы,
* *Conditions string* - новые права на изменение страницы.

AppendPage
==============================
Контракт добавляет текст к существующей странице текущей экосистеме. Параметры:

* *Id int* - идентификатор изменяемой страницы,
* *Value string* - добавляемый текст к странице.

NewBlock
==============================
Контракт добавляет новый страничный блок в текущей экосистеме. Параметры:

* *Name string* - имя блока,
* *Value string* - текст блока,
* *Conditions string* - права на изменение блока.

EditBlock
==============================
Контракт изменяет существующий блок в текущей экосистеме. Параметры:

* *Id int* - идентификатор изменяемого блока,
* *Value string* - новый текст блока,
* *Conditions string* - новые права на изменение блока.

NewTable
==============================
Контракт добавляет новую таблицу в текущей экосистеме. Параметры:

* *Name string* - имя таблицы (только латинские символы),
* *Columns string* - массив колонок в JSON формате ``[{"name":"...", "type":"...","index": "0", "conditions":"..."},...]``, где

  * *name* - наименование колонки - латинские символы,
  * *type* - тип ``varchar, bytea, number, datetime, money, text, double, character``,
  * *index* - неиндексируемое поле  - "0", создать индекс - "1".
  * *conditions* - права на изменение данных в столбце; если необходимо указать права доступа на чтение, то нужно использовать JSON формат. Например, ``{"update":"ContractConditions(`MainCondition`)", "read":"ContractConditions(`MainCondition`)"}``

* *Permissions string* - права на доступ в JSON формате ``{"insert": "...", "new_column": "...", "update": "..."}``, где

  * *insert* - права на вставку записей,
  * *new_column* - права на добавление колонки,
  * *update* - права на изменение прав.

EditTable
==============================
Контракт изменяет права на доступ к таблице в текущей экосистеме. Параметры:

* *Name string* - имя таблицы, 
* *Permissions string* - Разрешения на доступ в JSON формате ``{"insert": "...", "new_column": "...", "update": "..."}``, где

  * *insert* - права на вставку записей,
  * *new_column* - права на добавление колонки,
  * *update* - права на изменение прав.
   
NewColumn
==============================
Контракт добавляет новую колонку к таблице в текущей экосистеме. Параметры:

* *TableName string* - имя таблицы,
* *Name* - наименование колонки (тольколатинские символы),
* *type* - тип ``varchar, bytea, number, datetime, money, text, double, character``,
* *Index* - неиндексируемое поле  - "0", создать индекс - "1",
* *Permissions* - права на изменение данных в столбце; если необходимо указать права доступа на чтение, то нужно использовать JSON формат, например, ``{"update":"ContractConditions(`MainCondition`)", "read":"ContractConditions(`MainCondition`)"}``.

EditColumn
==============================
Контракт меняет права на изменение колонки в таблице в текущей экосистеме. Параметры:

* *TableName string* - имя таблицы,
* *Name* - имя колонки,
* *Permissions* - права на изменение значений в колонке, если необходимо указать права доступа на чтение, то нужно использовать JSON формат, например,  ``{"update":"ContractConditions(`MainCondition`)", "read":"ContractConditions(`MainCondition`)"}``.


NewLang
==============================
Контракт добавляет языковые ресурсы в текущей экосистеме. Права на добавление определяются в параметре *changing_language* в настройках экосистемы. Параметры:

* *Name string* - имя языкового ресурса (только латинские символы). 
* *Trans* - языковые ресурсы в виде строки в JSON формате, где ключ - двухсимвольный код языков, значение - перевод, например: ``{"en": "English text", "ru": "Английский текст"}``.

EditLang
==============================
Контракт обновляет языковой ресурс в текущей экосистеме. Права на обновление определяются в параметре *changing_language* в настройках экосистемы. Параметры

* *Name string* - имя языкового ресурса. 
* *Trans* - языковые ресурсы в виде строки в JSON формате, где ключ - двухсимвольный код языков, значение - перевод, например: ``{"en": "English text", "ru": "Английский текст"}``.

NewSign
==============================
Контракт создает данные для для контрактов с подписью в текущей экосистеме. Параметры:

* *Name string* - имя контракта, который будет использовать дополнительную подпись. 
* *Value string* - описание параметров в виде JSON строки, где 
    
  * *title* - текст сообщения,
  * *params* - массив параметров, которые показываются пользователю, где **name** - имя поля, **text** - описание поараметра.
    
* *Conditions string* - права на изменение записи.

Пример значения *Value*

``{"title": "Would you like to sign?", "params":[{"name": "Receipient", "text": "Account"},{"name": "Amount", "text": "Amount(EGS)"}]}``

EditSign
==============================
Контракт обновляет данные для для контрактов с подписью в текущей экосистеме. Параметры:

* *Id int* - идентификатор изменяемой подписи,
* *Value string* - новое значение параметров,
* *Conditions string* - новые права на изменение параметров подписи.

Import 
==============================
Контракт импортирует данные из файла *.sim в экосистему. Параметры:

* *Data string* - импортируемые данные, полученные при экспорте приложений в *.sim файл.

NewCron
==============================
Контракт добавляет новую задачу в cron для запуска по таймеру. Контракт присутствует только в VDE системах. Параметры:

* *Cron string* - строка, определяющая периодичность запусков в формате *cron*,
* *Contract string* - имя запускаемого в VDE контракта, контракт должен быть без параметров,
* *Limit int* - необязательное поле, в котором можно указать количество запусков (пока не исполняется),
* *Till string* - необязательно поле с временем окончания задачи (пока не учитывается),
* *Conditions string* - права на изменение задачи.

EditCron
==============================
Контракт изменяет настройки задачи в cron для запуска по таймеру. Контракт присутствует только в VDE системах. Параметры:

* *Id int* - идентификатор задачи,
* *Cron string* - строка определяющая периодичность запусков в формате *cron*; чтобы отключить задачу, нужно не указывать этот параметр или указать пустую строку,
* *Contract string* - имя запускаемого VDE контракта, контракт должен быть без параметров,
* *Limit int* - необязательное поле, в котором можно указать количество запусков (пока не исполняется),
* *Till string* - необязательно поле с временем окончания задачи (пока не учитывается),
* *Conditions string* - новые права на изменение задачи.
