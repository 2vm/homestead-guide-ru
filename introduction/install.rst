################################################################################
Установка и настройка
################################################################################

В этом разделе рассматриваются вопросы установки и настройки Apla.

********************************************************************************
Установка в системе Windows
********************************************************************************

Расcмотрим вопрос установки тестовой версии Apla в системе Windows.

1. Зайдите на страницу https://golang.org/dl/ и скачайте последнюю стабильную версию компилятора golang в соответствии 
   с разрядностью вашей Windows. Например, если последняя версия 1.8.3, то скачайте из списка **Stable Versions** файл go1.8.3.windows-386.msi, если у вас 3
   2-х разрядная Windows, и файл go1.8.3.windows-amd64.msi в случае 64-х разрядной Windows.
   
2. Запустите эту установку на вашем компьютере. По умолчанию, установка произойдет в директорию c:\\Go и лучше этот параметр не менять. 
   Запустите команду *go version*, которая покажет текущую версию, чтобы проверить что все успешно установилось.

3. Создайте какую-нибудь директорию на любом из ваших дисков, в которой будут хранится прокеты на golang. Например, C:\\MyGo. После этого,
   необходимо запустить команду **setx GOPATH c:\\MyGo**, которая укажет вашу директорию как папку с вашими проектами на go. Запустите
   команду **go env**, которая выведет список параметров, и проверьте, что в *GOPATH* там указана ваша директория. В принципе, вы можете
   пропустить этот шаг, но тогда вы должны использовать для проектов ту директорию, на которую указывает *GOPATH* по умолчанию при
   запуске *go env*.
   
4. Зайдите на страницу https://www.enterprisedb.com/downloads/postgres-postgresql-downloads, чтобы скачать базу данных PostgreSQL.
   Выберите там последнюю версию и в качестве OS укажите Windows x86-32 или Windows x86-64, в зависимости от разрядности вашей версии
   Windows. 
   
5. Запустите загруженный файл установки PostgreSQL. Предложенный путь установки можно оставить без изменений, а путь для хранения базы
   данных укажите *c:\\PostgreSQL*. В качестве пароля для супер пользователя можно указать *postgres*, все остальные параметры можно
   оставить по умолчанию. В конце, вам будет предложено запустить Stack Builder для установки дополнительных компонент, вы можете
   отказаться от этого шага.
   
6. Зайдите  на страницу https://sourceforge.net/projects/mingw-w64/ и скачайте mingw-w64-install.exe. Запустите ее. Если у вас 32-х
   разрядная Windows, то опции установки оставляйте без изменений, а если у вас 64-х разрядная, то смените Architecture с *i686* на
   x86_64. Зайдите в директорию куда был установлен mingw и найдите там файл mingw-w64.bat. Во второй строке там указан путь к bin,
   типа такого *C:\\Program Files\\mingw-w64\\x86_64-6.1.0-posix-seh-rt_v5-rev1\\mingw64\\bin*. Скопируйте в буфер обмена этот путь.
   Откройте в Windows Параметры - Система - О системе - Дополнительные параметры системы - далее выберите закладку Дополнительно
   и нажмите внизу кнопку Переменные среды. Найдите в Системных переменных переменную Path и нажмите Изменить. Добавьте туда наш
   скопированный путь. Также добавьте туда директорию с bin куда был установлен PostgreSQL, например, *c:\\Program Files\\PostgreSQL\\9.6\\bin*.
   
7. Зайдите на страницу https://git-scm.com/download/win и скачайте там соответствующую (32 или 64) версию Git for Windows и запустите
   эту установку. Все опции при установке можно оставлять без изменений.

8. Теперь запустите команду **go get -u github.com/Apla/go-apla-mvp**. Она может выполняться несколько минут и после ее выполнения у
   вас должна появиться директория c:\\MyGo\\src\\github.com\\Apla\\go-apla-mvp с исходными файлами. Есть еще один способ для получения
   исходных файлов - зайдите на github.com/Apla/go-apla-mvp, Нажмите Clone & Download и нажмите Download ZIP. После этого, просто
   распакуйте содержимое директории go-apla-mvp-master этого zip в директорию *c:\\MyGo\\src\\github.com\\Apla\\go-apla-mvp*.
   
9. Запустите команду **go get -u github.com/jteeuwen/go-bindata** и затем зайдите в директорию *c:\\MyGo\\src\\github.com\\jteeuwen\\go-bindata\\go-bindata* и запустите там **go install**. В директории *c:\\MyGo\\bin* должен создаться файл go-bindata.exe.

10. Зайдите в директорию *c:\\MyGo\\src\\github.com\\Apla\\go-apla-mvp* и запустите там файл *bindata.sh* или можно запустить    **C:\\MyGo\\bin\\go-bindata -o="packages/static/static.go" -pkg="static" static/...**. После этого выполните там же команду **go install**. Если все установлено нормально, то в директории c:\myGo\bin будет создан файл *go-apla-mvp.exe*.
   
11. Скопируйте go-apla-mvp.exe в какую-нибудь директорию, например, *c:\\Apla* и запустите его. В браузере откроется страница  http://localhost:7079 с параметрами установки. Для локального тестирования на своем блокчейне выберите Private-net. Чтобы указать DB Name (Database Name), необходимо предварительно создать ее. Для этого запустите **psql -U postgres** и укажите далее пароль postgres. После приглашения *postgres=#* введите **CREATE DATABASE apla;** и нажмите Enter. После этого в настройках установки укажите *apla*,   а в качестве DB user и DB password укажите postgres. После этого нажмите на кнопку установки. В случае успешного завершения, вам будет предложено перезапустить Apla. Найдите в system tray иконку программы и по правой кнопке мыши выберите Exit. После этого запустите программу заново. Установка Apla закончена.
