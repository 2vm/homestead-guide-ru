################################################################################
Шаблонизатор страниц v2
################################################################################
********************************************************************************
Общее описание функций
********************************************************************************
Типы функций
==============================
Шаблоны страниц приложений создаются с помощью набора функций, который можно рассматривать как специализированный язык для создания интерфейсов приложений eGaaS. Функции можно разделить на несколько групп по типу выполняемых операций:

* получение значений из базы данных;
* оперирование с форматами и значениями переменных;
* представление данных в виде таблиц и диаграмм;
* построение форм с необходимым набором полей для ввода данных контрактов;
* вывод элементов навигации и вызова контрактов;
* создание элементов HTML разметки страницы – различных контейнеров с возможностью указания css классов;
* реализация условного вывода фрагментов шаблонов страниц; 
* создание многоуровневого меню.

Форматы функций
==============================
Для реализации функций языка построения шаблонов страниц используется два  формата FuncName() и FuncName{}. В первом случае параметры передаются как массив строк, а во втором как ассоциированный массив с именованными параметрами (ключами) и значениями. Значения можно не заключать в кавычки. Если значение содержит запятую или закрывающую скобку, то его следует заключить в двойные или обратные  (``) кавычки. Если функция не имеет параметров или только один параметр, то вместо круглых скобок можно ставить двоеточие: *MyFunc:param* эквивалентно *MyFunc(param)*.

Например,

.. code:: js

      FuncName( string 1, string 2, "Text, text")

.. code:: js

      FuncName{ ParamName1: string 1, ParamName2: string 2, ParamName3: "Text, text" }
