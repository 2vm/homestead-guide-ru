################################################################################
REST API
################################################################################

Черновик команд API для работы с EGAAS.

Вызов команды происходит при обращении к **/api/v1/command/[param]**, где **command** - имя команды, **param** - дополнительный параметр, например, имя изменяемого или получаемого ресурса. Ответ сервера представлен в JSON формате.

Предлагается в каждои ответе возвращать параметр **error**, который пустой в случае успешного завершения или содержит текст ошибки.
*Нужно ли вводить дополнительные коды ответа кроме 200?*
Такие как Неправильный запрос (400), Нет прав доступа (401), Не найдено (404).

На данный момент, при первом обращении сервер открывает сессию, для данного пользователя и возвращает ее в Cookie в gosessionid. Поэтому для текущей совместимости необходимо при каждом запросе дополнительно передавать это значение cookie. Например, **Cookie: gosessionid=34673476347834**. В дальнейшем возможен переход на JWT https://jwt.io/ 

********************************************************************************
Общие команды API
********************************************************************************

getuid   как вариант gettoken
==============================
**GET** Возвращает уникальное значение, которое нужно подписать своим приватным ключом и отправить обратно серверу с помощью команды **auth**.

.. code:: 
    
    GET
    /api/v1/getuid
    
Вариант ответа

.. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "uid": "28726874268427424",
        "error": ""
    }

auth   как вариант login
==============================
**POST** Аутентификация пользователя. Предварительно необходимо вызвать команду **getuid** для получения уникального значения и подписать его. В случае успеха возвращается соответствующий адрес в формате XXXX-XXXX-...-XXX. 

.. code:: 
    
    POST
    /api/v1/auth
    pubkey: hex публичный ключ
    signature: hex подписанный uid
    state: идентификатор государства
    
Вариант ответа

.. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "address": "1234-....-3424",
        "error": ""
    }      

********************************************************************************
Команды API для отправки предопределенных транзакций
********************************************************************************

sendegs 
==============================
**POST** Отправить EGS с одного кошелька на другой. Перед вызовом данной команды необходимо отправить запрос **prepare/sendegs**, а затем, после подписывания возвращаемого параметра *forsign* обходимо отправить такой же запрос с полем *signature* в котором записана подпись. 

.. code:: 
    
    POST
    /api/v1/sendegs
    pubkey: hex публичный ключ
    recipient - адрес получателя
    amount - сумма перевода в qEGS
    commission - комиссия qEGS
    comment - комментарий
    signature - hex подпись
    
Вариант ответа

.. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "error": ""
    }      


prepare/{tx}
==============================
**POST** Отправляет запрос на получение строки для подписи указанной транзакции. В качестве **{tx}** необходимо указать имя транзакции для которой следует возвратить строку для подписи. В параметре forsign возвращается строка, которую необходимо будет подписать.

.. code:: 
    
    POST
    /api/v1/prepare/sendegs
    pubkey: hex публичный ключ
    recipient - адрес получателя
    amount - сумма перевода в qEGS
    commission - комиссия qEGS
    comment - комментарий
    
Вариант ответа

.. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "forsign": "......", 
        "error": ""
    }      
