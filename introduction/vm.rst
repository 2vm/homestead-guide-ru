################################################################################
Компилятор и виртуальная машина
################################################################################

В данном разделе рассматривается код организация и работа кода в директории packages/script, который относится к компиляции и
работе виртуальной машины языка Simvolio. Документация предназначена в первую очередь для разработчиков.

Работа с контрактами организована следующим образом. Контракты, функции пишутся на языке Simvolio и хранятся в 
таблицах contracts в экосистемах. При запуске программы происходит чтение исходного кода из базы данных и 
компиляция его в байт-код. При добавлении или изменении контрактов и записи их в блокчейн, обновляемые 
данные компилируются и добавляется/обновляется соответствующий байт-код в виртуальной машине. 
Физически байт код никуда не сохраняется, при выходе из программы и новом запуске компиляция происходит заново. 
Виртуальная машина представляет из себя набор объектов - контракты, функции, типы и т.п. Весь исходный код, 
описанный в таблице contracts у всех экосистем, компилируется в строгой последовательности в одну 
виртуальную машину и на всех нодах состояние виртуальной машины одно и тоже. При вызове контракта сама 
виртуальная машина никак не изменяет своего состояния. Любое выполнение контракта или вызов функции происходят 
на отдельном runtime стеке, который создается при каждом внешнем вызове. Каждая экосистема может иметь так 
называемую виртуальную экосистему, которая работает со своими таблицами вне блокчейна, в рамках одной ноды, и 
апрямую не может оказывать влияния на блокчейн или другие виртуальные экосистемы. В этом случае нода, которая 
хостит такую виртуальную экосистему. компилирует её контракты и создает для неё свою виртуальную машину.

********************************************************************************
Виртуальная машина
********************************************************************************
